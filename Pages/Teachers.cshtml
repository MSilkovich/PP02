@* @page
@model VisitkaUCR.Pages.TeachersModel
@{
    ViewData["Title"] = "Преподаватели";
}

<h2 class="text-center">Преподаватели</h2>

<div class="search-container">
    <input type="text" id="searchInput" placeholder="Поиск..." class="form-control" onkeyup="filterTeachers()">
</div>

@* <div class="filters">
    <select id="positionFilter" class="form-select" onchange="filterTeachers()">
        <option value="">Выберите должность</option>
        @foreach (var position in Model.Positions)
        {
            <option value="@position">@position</option>
        }
    </select>

    <select id="facultyFilter" class="form-select" onchange="filterTeachers()">
        <option value="">Выберите факультет</option>
        @foreach (var faculty in Model.Faculties)
        {
            <option value="@faculty">@faculty</option>
        }
    </select>

    <select id="divisionFilter" class="form-select" onchange="filterTeachers()">
        <option value="">Выберите подразделение</option>
        @foreach (var division in Model.Divisions)
        {
            <option value="@division">@division</option>
        }
    </select>
</div> *@
@* <style>
    .button {
        margin-top: 80px;
        border: none;
        background-color: rgba(255, 255, 255, 0.5);
        padding: 10px 40px;
        font-size: 18px;
        font-weight: bold;
        cursor: pointer;
        border-radius: 12px;
        transition-duration: 0.4s;
    }

        .button:hover {
            background-color: rgba(255, 255, 255, 0.7);
        }

    .search-form {
        margin: 20px 0;
        background-color: #f8f9fa;
        padding: 20px;
        border-radius: 8px;
    }

    .search-input {
        width: 100%;
        padding: 10px;
        border: 1px solid #ccc;
        border-radius: 4px;
    }

    .filter-row {
        display: flex;
        justify-content: space-between;
        margin-top: 20px;
    }

    .filter-select {
        width: 30%;
        padding: 10px;
        border: 1px solid #ccc;
        border-radius: 4px;
    }

    .teacher-cards {
        display: flex;
        flex-wrap: wrap;
        gap: 20px;
        margin-top: 20px;
    }

    .teacher-card {
        width: calc(25% - 15px);
        background-color: transparent;
        border: none;
        padding: 0;
        perspective: 1000px;
    }

    .card-content {
        position: relative;
        width: 100%;
        height: 220px;
        transition: transform 0.8s;
        transform-style: preserve-3d;
    }

    .teacher-card:hover .card-content {
        transform: rotateY(180deg);
    }

    .front, .back {
        position: absolute;
        width: 100%;
        height: 100%;
        backface-visibility: hidden;
        background-color: #fff;
        border: 1px solid #ddd;
        border-radius: 8px;
        padding: 30px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        background-image: url('images/card_bg.jpg');
        background-size: cover;
    }

    .back {
        transform: rotateY(180deg);
    }

    .card-icon {
        width: calc(25% - 10px);
        height: auto;
        border-radius: 8px;
        object-fit: cover;
    }

    .teacher-card p {
        margin: 10px 0;
    }

    .card-logo {
        width: calc(25% - 10px);
        height: auto;
        position: absolute;
        top: 30px;
        right: 30px;
    }

</style>
<div class="search-form container-fluid px-5">
    <input type="text" class="search-input" placeholder="Поиск">
    <div class="filter-row">
        <select class="filter-select">
            <option>Не выбрано</option>
            <option>Должность 1</option>
            <option>Должность 2</option>
        </select>
        <select class="filter-select">
            <option>Все</option>
            <option>Заведующий кафедрой</option>
            <option>Преподаватель</option>
        </select>
        <select class="filter-select">
            <option>Все</option>
            <option>Подразделение 1</option>
            <option>Подразделение 2</option>
        </select>
    </div>
</div>

<div class="teachers-container">
    @foreach (var teacher in Model.Teachers)
    {
        <div class="teacher-card" data-position="@string.Join(",", teacher.IdPositions.Select(p => p.Title))"
             data-faculty="@string.Join(",", teacher.IdPositions.Select(p => p.IdDivisionNavigation.IdFacultyNavigation.Title))"
             data-division="@string.Join(",", teacher.IdPositions.Select(p => p.IdDivisionNavigation.Title))">

            <div class="teacher-photo">
                @if (teacher.Photo != null)
                {
                    string base64String = Convert.ToBase64String(teacher.Photo);
                    <img src="data:image/jpeg;base64,@base64String" alt="Фото @teacher.Surname">
                }
                else
                {
                    <img src="/images/default-avatar.png" alt="Нет фото">
                }
            </div>

            <div class="teacher-info">
                <h3>@teacher.Surname @teacher.Name @teacher.Patronymic</h3>
                <p>Email: <a href="mailto:@teacher.Email">@teacher.Email</a></p>
                <p><strong>Должность:</strong> @string.Join(", ", teacher.IdPositions.Select(p => p.Title))</p>
                <p><strong>Дисциплины:</strong> @string.Join(", ", teacher.TeachersDisciplines.Select(d => d.IdDisciplineNavigation.Title))</p>
                <p><strong>Достижения:</strong> @string.Join(", ", teacher.IdAchievements.Select(a => a.Title))</p>
                <p><strong>Публикации:</strong> @string.Join(", ", teacher.IdPublications.Select(p => p.Title))</p>
            </div>
        </div>
    }
</div>

<script>
    function filterTeachers() {
        let search = document.getElementById("searchInput").value.toLowerCase();
        let position = document.getElementById("positionFilter").value.toLowerCase();
        let faculty = document.getElementById("facultyFilter").value.toLowerCase();
        let division = document.getElementById("divisionFilter").value.toLowerCase();

        document.querySelectorAll(".teacher-card").forEach(card => {
            let cardText = card.innerText.toLowerCase();
            let cardPosition = card.getAttribute("data-position").toLowerCase();
            let cardFaculty = card.getAttribute("data-faculty").toLowerCase();
            let cardDivision = card.getAttribute("data-division").toLowerCase();

            if (cardText.includes(search) &&
                (position === "" || cardPosition.includes(position)) &&
                (faculty === "" || cardFaculty.includes(faculty)) &&
                (division === "" || cardDivision.includes(division))) {
                card.style.display = "block";
            } else {
                card.style.display = "none";
            }
        });
    }
</script> *@ 
@page
@model VisitkaUCR.Pages.TeachersModel
@{
    ViewData["Title"] = "Преподаватели";
}

<h2 class="text-center">Преподаватели</h2>

<div class="search-container">
    <input type="text" id="searchInput" placeholder="Поиск..." class="form-control" onkeyup="filterTeachers()">
</div>

<div class="filters">
    <select id="positionFilter" class="form-select" onchange="filterTeachers()">
        <option value="">Выберите должность</option>
        @foreach (var position in Model.Positions)
        {
            <option value="@position">@position</option>
        }
    </select>

    <select id="facultyFilter" class="form-select" onchange="filterTeachers()">
        <option value="">Выберите факультет</option>
        @foreach (var faculty in Model.Faculties)
        {
            <option value="@faculty">@faculty</option>
        }
    </select>

    <select id="divisionFilter" class="form-select" onchange="filterTeachers()">
        <option value="">Выберите подразделение</option>
        @foreach (var division in Model.Divisions)
        {
            <option value="@division">@division</option>
        }
    </select>
</div>

<div class="teacher-cards container-fluid px-5">
    @foreach (var teacher in Model.Teachers)
    {
        <div class="teacher-card text-light" data-position="@string.Join(",", teacher.IdPositions.Select(p => p.Title))"
             data-faculty="@string.Join(",", teacher.IdPositions.Select(p => p.IdDivisionNavigation.IdFacultyNavigation.Title))"
             data-division="@string.Join(",", teacher.IdPositions.Select(p => p.IdDivisionNavigation.Title))">

            <div class="card-content">
                <div class="front">
                    <div class="d-flex align-items-start">
                        <div class="teacher-photo">
                            @if (teacher.Photo != null)
                            {
                                string base64String = Convert.ToBase64String(teacher.Photo);
                                <img src="data:image/jpeg;base64,@base64String" alt="Фото @teacher.Surname" class="card-icon">
                            }
                            else
                            {
                                <img src="/images/default-avatar.png" alt="Нет фото" class="card-icon">
                            }
                        </div>
                        <div class="card-text" style="margin: 10px;">
                            <p>@teacher.Surname @teacher.Name @teacher.Patronymic</p>
                            <p>Специализация: @string.Join(", ", teacher.IdPositions.Select(p => p.Title))</p>
                        </div>
                        <img src="/images/guap_logo.png" alt="Logo" class="card-logo">
                    </div>
                    <p>Факультет: @string.Join(", ", teacher.IdPositions.Select(p => p.IdDivisionNavigation.IdFacultyNavigation.Title))</p>
                </div>

                <div class="back d-flex align-items-start">
                    <div class="card-text text-dark" style="margin: 10px;">
                        <p class="button">Дисциплины: @string.Join(", ", teacher.TeachersDisciplines.Select(d => d.IdDisciplineNavigation.Title))</p>
                        <p class="button">Публикации: @string.Join(", ", teacher.IdPublications.Select(p => p.Title))</p>
                    </div>
                    <img src="/images/guap_logo.png" alt="Logo" class="card-logo">
                </div>
            </div>
        </div>
    }
</div>

<script>
    function filterTeachers() {
        let search = document.getElementById("searchInput").value.toLowerCase();
        let position = document.getElementById("positionFilter").value.toLowerCase();
        let faculty = document.getElementById("facultyFilter").value.toLowerCase();
        let division = document.getElementById("divisionFilter").value.toLowerCase();

        document.querySelectorAll(".teacher-card").forEach(card => {
            let cardText = card.innerText.toLowerCase();
            let cardPosition = card.getAttribute("data-position").toLowerCase();
            let cardFaculty = card.getAttribute("data-faculty").toLowerCase();
            let cardDivision = card.getAttribute("data-division").toLowerCase();

            if (cardText.includes(search) &&
                (position === "" || cardPosition.includes(position)) &&
                (faculty === "" || cardFaculty.includes(faculty)) &&
                (division === "" || cardDivision.includes(division))) {
                card.style.display = "block";
            } else {
                card.style.display = "none";
            }
        });
    }
</script>

<style>
    .teacher-cards {
        display: flex;
        flex-wrap: wrap;
        gap: 20px;
    }

    .teacher-card {
        width: 300px;
        background-color: #333;
        border-radius: 10px;
        overflow: hidden;
        transition: transform 0.3s ease;
    }

        .teacher-card:hover {
            transform: scale(1.05);
        }

    .card-content {
        position: relative;
        width: 100%;
        height: 100%;
    }

    .front, .back {
        width: 100%;
        height: 100%;
        padding: 20px;
        box-sizing: border-box;
        backface-visibility: hidden;
        transition: transform 0.6s ease;
    }

    .front {
        transform: rotateY(0deg);
    }

    .back {
        position: absolute;
        top: 0;
        left: 0;
        transform: rotateY(180deg);
        background-color: #fff;
    }

    .teacher-card:hover .front {
        transform: rotateY(180deg);
    }

    .teacher-card:hover .back {
        transform: rotateY(0deg);
    }

    .teacher-photo img {
        width: 80px;
        height: 80px;
        border-radius: 50%;
        object-fit: cover;
    }

    .card-logo {
        width: 50px;
        height: 50px;
        margin-left: auto;
    }

    .card-text {
        flex-grow: 1;
    }

    .button {
        background-color: #007bff;
        color: white;
        padding: 10px;
        border-radius: 5px;
        text-align: center;
        cursor: pointer;
    }

        .button:hover {
            background-color: #0056b3;
        }
</style>